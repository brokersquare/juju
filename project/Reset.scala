import sbt._
import Keys._

object Reset {
    lazy val reset = taskKey[Unit]("Delete all files and folders generated by the build included target folders")
    val resetTask = reset := {
        performReset(baseDirectory.value)
    }
    lazy val tasks = Seq(
        resetTask
    )

    def performReset(folder : File) = {
        val rootFolder = findRoot(folder)
        val files = filesToDelete(rootFolder)
        IO.deleteFilesEmptyDirs(files)
    }

    def findRoot(folder: File) : File = {
        val rootFile = new File(folder, "build.sbt")
        if (rootFile.exists)
            folder
        else
            findRoot(new File(folder.getParent()))
    }

    def filesToDelete(rootFolder: File) : Seq[File] = {
        val native: PathFinder = (rootFolder) ** "native*"
        val target: PathFinder = (rootFolder) ** "target*"
        val project: PathFinder = (rootFolder) ** "project" / "project"
        val snapshot: PathFinder = (rootFolder) ** "snapshots"
        target.get ++ project.get ++ snapshot.get ++ native.get
    }
}